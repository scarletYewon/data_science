# -*- coding: utf-8 -*-
"""L02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KvaJW_3cUVHfPgSmdtZNYCMQarutwSCL
"""

class Vector:
  def __init__(self, *lst):
    self.data = lst

  def __str__(self):
    return f"Vec{self.data}"

  def __add__(self, other):
    return Vector(*[a+b for a, b in zip(self.data, other.data)])
  
  def __sub__(self, other):
    return Vector(*[a-b for a, b in zip(self.data, other.data)])

  def __mul__(self, other):
    if type(other) == Vector:
      return sum(a * b for a, b in zip(self.data, other.data))
    return Vector(*[a *other for a in self.data])

  def __rmul__(self, other):
    return Vector(*[a *other for a in self.data])

a = Vector(1,2,3)
b = Vector(2,3,4)
c = a + b
d = b - a
e = b * 4
f = 3 * b
g = a * b

print(a, b, c, d, e, f, g)

import numpy as np


a = np.array([1,2,3])
b = np.array([2,3,4])

print(a+b)
print(a-b)
print(a*4)
print(a*b)
print(a.dot(b))
print(sum(a*b))

print(np.zeros([3,4]))
print(np.ones([3,4]))

import numpy as np

A = np.array([[1,2,3],[4,5,6]])
B = np.array([[3,2,1],[1,2,3]])

print(A+b)
print(A-b)
print(A*b) # 원소곱
print(B.T) # 전치
print(A.dot(B.T)) # 행렬곱