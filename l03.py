# -*- coding: utf-8 -*-
"""L03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14UeZBn_zhphsNX5_4gAck7riEC3CzDZM
"""

# 친구 수 세기
f = open("fb.txt","r")

edges = []

for line in f:
  edges.append(tuple(int(x) for x in line.split()))

f.close()

num_friends = {}

for u, v in edges:
  if u not in num_friends:
    num_friends[u] = 0
  if v not in num_friends:
    num_friends[v] = 0
  
  num_friends[u] +=1
  num_friends[v] +=1

print(num_friends)

# 중심경향성

# 평균 (mean)
mean = sum(num_friends.values()) / len(num_friends)
print(f"mean: {mean}")

# 중앙값 (median)
num_friends_list = sorted(num_friends.values())
median = num_friends_list[len(num_friends_list) // 2]
print(f"median: {median}")

# 최빈값 (mode)
from collections import Counter
mode = Counter(num_friends_list).most_common(1)[0]
print(f"mode: {mode}")

# 최대/최소
print(f"min: {min(num_friends_list)}")
print(f"max: {max(num_friends_list)}")

q0 = num_friends_list[0]
q100 = num_friends_list[len(num_friends_list)-1]
q25 = num_friends_list[int(len(num_friends_list) * 0.25)]
q50 = num_friends_list[int(len(num_friends_list) * 0.5)]
print(f"q0: {q0}")
print(f"q100: {q100}")
print(f"q25: {q25}")
print(f"q50: {q50}")

# 산포도
import numpy as np

num_friends_np = np.array(num_friends_list)

# max - min
maxmin = num_friends_np.max() - num_friends_np.min()
print(f"maxmin: {maxmin}")

# var
mean = num_friends_np.mean()
var = ((num_friends_np - mean) ** 2).mean()
print(f"var: {var}")
print(f"stddev: {var ** 0.5}")
print(f"var: {np.var(num_friends_np)}")

# interquantile range
q75 = np.quantile(num_friends_np, 0.75)
q25 = np.quantile(num_friends_np, 0.25)
print(f"iqr: {q75 - q25}")

from collections import Counter
num_friends_list
cnt = Counter([x // 10 * 10 for x in num_friends_list])
print(cnt)

import matplotlib.pyplot as plt

x,y = zip(*cnt.items())
plt.bar(x, y, width=10)
plt.xlabel("# friends")
plt.ylabel("count")
plt.show()

# 상관계수
import sys

ids, X, Y = zip(*(tuple(int(x) for x in line.split()) for line in sys.stdin))

mean_x = sum(X) / len(X)
mean_y = sum(Y) / len(Y)
std_x = (sum((x-mean_x) ** 2 for x in X)/len(X)) ** 0.5
std_y = (sum((y-mean_y) ** 2 for y in Y)/len(Y)) ** 0.5
cov = sum((x - mean_x) * (y - mean_y) for x,y in zip(X,Y))/len(X)
corr = cov/std_x/std_y
print(corr)

# 상관관계 확인
import matplotlib.pyplot as plt
import sys

ids, cnts, mins = zip(*(tuple(int(x) for x in line.split()) for line in sys.stdin))

plt.scatter(cnts, mins, s=0.3)
plt.xlabel("# friends")
plt.ylabel("minutes per day")
plt.title("Correlation")
plt.show()